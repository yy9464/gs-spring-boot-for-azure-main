{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "plan": {
      "type": "string",
      "metadata": {
        "description": "Name of the pricing tier which determines the resource and cost associated with your instance."
      },
      "allowedValues": [
        "consumption",
        "standard",
        "enterprise"
      ],
      "defaultValue": "consumption"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Primary location for all resources."
      },
      "minLength": 1
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "postgresServer": "pg-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "springApps": "asa-",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, resourceGroup().name, parameters('location')))]",
    "asaInstanceName": "[format('{0}{1}', variables('abbrs').springApps, variables('resourceToken'))]",
    "appName": "demo",
    "userAssignedManagedIdentityName": "[format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]",
    "tags": {
      "spring-cloud-azure": "true",
      "deploy-to-azure-button": "true"
    }
  },
  "resources": [
    {
      "condition": "[equals(parameters('plan'), 'consumption')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}--{1}', deployment().name, parameters('plan'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[variables('appName')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('asa-service-name', variables('appName')))]"
          },
          "asaInstanceName": {
            "value": "[concat(variables('asaInstanceName'), '-', parameters('plan'))]"
          },
          "userAssignedManagedIdentityName": {
            "value": "[concat(variables('userAssignedManagedIdentityName'), '-', parameters('plan'))]"
          }
        },
        "templateLink": {
          "relativePath": "azuredeploy/consumption.json",
          "contentVersion":"1.0.0.0"
        }
      }
    },
    {
      "condition": "[equals(parameters('plan'), 'standard')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}--{1}', deployment().name, parameters('plan'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[variables('appName')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('asa-service-name', variables('appName')))]"
          },
          "asaInstanceName": {
            "value": "[concat(variables('asaInstanceName'), '-', parameters('plan'))]"
          },
          "userAssignedManagedIdentityName": {
            "value": "[concat(variables('userAssignedManagedIdentityName'), '-', parameters('plan'))]"
          }
        },
        "templateLink": {
          "relativePath": "azuredeploy/standard.json",
          "contentVersion":"1.0.0.0"
        }
      }
    },
    {
      "condition": "[equals(parameters('plan'), 'enterprise')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}--{1}', deployment().name, parameters('plan'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appName": {
            "value": "[variables('appName')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('asa-service-name', variables('appName')))]"
          },
          "asaInstanceName": {
            "value": "[concat(variables('asaInstanceName'), '-', parameters('plan'))]"
          },
          "userAssignedManagedIdentityName": {
            "value": "[concat(variables('userAssignedManagedIdentityName'), '-', parameters('plan'))]"
          }
        },
        "templateLink": {
          "relativePath": "azuredeploy/enterprise.json",
          "contentVersion":"1.0.0.0"
        }
      }
    }
  ],
  "outputs": {
    "Name": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}--{1}', deployment().name, parameters('plan'))), '2022-09-01').outputs.Name.value]"
    },
    "URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}--{1}', deployment().name, parameters('plan'))), '2022-09-01').outputs.URL.value]"
    }
  }
}
